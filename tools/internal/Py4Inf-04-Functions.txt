::Ερώτηση 1 - multiple choice, shuffle::[html]
Ποια δεσμευμένη λέξη της Python υποδηλώνει την έναρξη του ορισμού μιας συνάρτησης;
{
= def
~ break
~ help
~ sweet
}

::Ερώτηση 2 - multiple choice, shuffle::[html]
Στην Python, πώς υποδεικνύετε το τέλος του μπλοκ κώδικα που αποτελεί τη συνάρτηση;
{
=΄Αφαιρείτε την εσοχή μιας γραμμής κώδικα και την τοποθετείτε στο ίδιο επίπεδο εσοχής με τη δεσμευμένη λέξη def.
~ Βάζετε τη λέξη-κλειδί "END" στη στήλη 7 της γραμμής που πρόκειται να είναι η τελευταία γραμμή της συνάρτησης.
~ Βάζετε έναν χαρακτήρα \# στο τέλος της τελευταίας γραμμής της συνάρτησης.
~ Προσθέτετε το αντίστοιχο άγκιστρο κλεισίματος, που χρησιμοποιήθηκε για την έναρξη της συνάρτησης, \}
}

::Ερώτηση 3 - multiple choice, shuffle::[html]
Στην Python πώς περιγράφεται καλύτερα η λειτουργία input();
{
= Μια ενσωματωμένη συνάρτηση
~ Μια συνάρτηση ορισμένη από το χρήση
~ Η κεντρική μονάδα επεξεργασίας
~ Μια δομή επιλογής
}

::Ερώτηση 4 - multiple choice, shuffle::[html]
Τι θα εκτυπώσει ο παρακάτω κώδικας;
<pre>
def thing():
    print('Hello')
&nbsp;
print('There')
</pre>
{
= There
# Δεδομένου ότι η συνάρτηση thing() δεν καλείται - η print('Hello') δεν εκτελείται ποτέ.
~ thing
Hello
There
~ Hello
~ def
thing
}

::Ερώτηση 5 - multiple choice, no shuffle::[html]
Στον παρακάτω κώδικα Python, ποιο από τα παρακάτω είναι "όρισμα" μιας συνάρτησης;
<pre>
x = 'banana'
y = max(x)
print(y)
</pre>
{
= x
~ max
~ 'banana'
~ print
}

::Ερώτηση 6 - multiple choice, shuffle::[html]
Τι θα εκτυπώσει ο παρακάτω κώδικας;
<pre>
def func(x) :
    print(x)
&nbsp;
func(10)
func(20)
</pre>
{
= 10
20
~ x
10
x
20
~ x
20
~ func
func
}

::Ερώτηση 7 - multiple choice, shuffle::[html]
Ποια γραμμή του παρακάτω κώδικα Python δεν θα εκτελεστεί ποτέ;
<pre>
def stuff():
    print('Hello')
    return
    print('World')
&nbsp;
stuff()
</pre>
{
= print('World')
# Το print('World') δεν θα εκτελεστεί ποτέ γιατί βρίσκεται μετά από μια δήλωση return.
~ def stuff():
~ print('Hello')
~ return
~ stuff()
}

::Ερώτηση 8 - multiple choice, no shuffle::[html]
Τι θα εκτυπώσει το παρακάτω πρόγραμμα Python;
<pre>
def greet(lang):
    if lang == 'es':
        return 'Hola'
    elif lang == 'fr':
        return 'Bonjour'
    else:
        return 'Hello'
&nbsp;
print(greet('fr'),'Michael')
</pre>
{
= Bonjour Michael
~ def
Hola
Bonjour
Hello
Michael
~ Hola Michael
~ Hola
Bonjour
Hello
Michael
}

::Ερώτηση 9 - multiple choice, shuffle::[html]
Ποιο είναι το πιο σημαντικό όφελος από τη σύνταξη των δικών σας συναρτήσεων;
{
= Αποφεύγετε να γράψετε τον ίδιο κώδικα περισσότερες από μία φορές στο πρόγραμμά σας.
# Το να αποφασίσετε να γράψετε μια συνάρτηση για δική σας χρήση είναι κάτι που συνηθίζεται όταν τα προγράμματά σας φτάνουν σε ένα συγκεκριμένο επίπεδο πολυπλοκότητας. Δεν υπάρχουν κανόνες.
~ Ακολουθείτε τον κανόνα ότι καμία συνάρτηση δεν μπορεί να έχει περισσότερες από 10 δηλώσεις.
~ Αποφεύγετε τις περισσότερες από 10 γραμμές διαδοχικού κώδικα χωρίς εσοχή ή με εσοχή.
~ Ακολουθείτε τον κανόνα ότι κάθε φορά που ένα πρόγραμμα είναι περισσότερες από 10 γραμμές πρέπει να χρησιμοποιήσετε μια συνάρτηση.
}