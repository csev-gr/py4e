::Ερώτηση 1 - multiple choice, no shuffle::[html]
Τι λάθος υπάρχει στον παρακάτω βρόχο της Python:
<pre>
n = 5
while n > 0 :
    print(n)
print('All done')
</pre>
{
= Ο βρόχος θα εκτελείτε επ' άπειρον.
~ Στην εντολή print('All done') πρέπει να προστεθεί εσοχή τεσσάρων κενών.
~ Δεν θα έπρεπε να υπάρχει άνω κάτω τελεία στη δήλωση της while.
~ Η while δεν είναι δεσμευμένη λέξη της Python.
}

::Ερώτηση 2 - multiple choice, shuffle::[html]
Τι κάνει η εντολή break;
{
= Προκαλεί την έξοδο από τον εκτελούμενο βρόχο.
~ Προκαλεί την έξοδο από το πρόγραμμα.
~ Μεταφέρει την εκτέλεση στην "αρχή" του βρόχου και ξεκινά την επόμενη εκτέλεσή του.
~ Επαναφέρει την μεταβλητή της επανάληψης στην αρχική της τιμή.
}

::Ερώτηση 3 - multiple choice, shuffle::[html]
Τι κάνει η εντολή continue;
{
= Μεταφέρει την εκτέλεση στην "αρχή" του βρόχου και ξεκινά την επόμενη εκτέλεσή του.
~ Προκαλεί την έξοδο από τον εκτελούμενο βρόχο.
~ Προκαλεί την έξοδο από το πρόγραμμα.
~ Επαναφέρει την μεταβλητή της επανάληψης στην αρχική της τιμή.
}

::Ερώτηση 4 - multiple choice, shuffle::[html]
Τι θα εκτυπωθεί από το ακόλουθο πρόγραμμα Python;
<pre>
tot = 0
for i in [5, 4, 3, 2, 1] :
    tot = tot + 1
print(tot)
</pre>
{
= 5
~ 0
~ 15
~ 10
}

::Ερώτηση 5 - multiple choice, no shuffle::[html]
Ποια είναι η μεταβλητή της επανάληψης στον ακόλουθο κώδικα σε Python:
<pre>
friends = ['Joseph', 'Glenn', 'Sally']
for friend in friends :
     print('Happy New Year:',  friend)
print('Done!')
</pre>
{
= friend
~ Sally
~ Glenn
~ Joseph
}

::Ερώτηση 6 - multiple choice, shuffle::[html]
Ποια από τις ακόλουθες προτάσεις περιγράφει καλύτερα το παρακάτω τμήμα κώδικα σε Python;
<pre>
zork = 0
for thing in [9, 41, 12, 3, 74, 15] :
    zork = zork + thing
print('After', zork)
</pre>
{
= Αθροίζει όλα τα στοιχεία μιας λίστας.
~ Μετρά όλα τα στοιχεία μιας λίστας.
~ Υπολογίζει τον μέσο όρο όλων των στοιχείων μιας λίστας.
~ Βρίσκει το μικρότερο στοιχείο μιας λίστας.
}

::Ερώτηση 7 - multiple choice, shuffle::[html]
Τι θα εκτυπώσει ο παρακάτω κώδικας;
<pre>
smallest_so_far = -1
for the_num in [9, 41, 12, 3, 74, 15] :
   if the_num < smallest_so_far :
      smallest_so_far = the_num
print(smallest_so_far)
</pre>
Υπόδειξη: Αυτή είναι μια ερώτηση "παγίδα" και οι περισσότεροι θα έλεγαν ότι αυτός ο κώδικας περιέχει σφάλμα - γι' αυτό διαβάστε προσεκτικά
{
= -1
# Κοιτάξτε προσεκτικά τη δήλωση if. Εάν η μεταβλητή ξεκινά ως "-1", η συνθήκη της if θα είναι ποτέ αληθής, δεδομένων των τιμών που θα επαναλάβει ο βρόχος;
~ 74
~ 42
~ 3
}

::Ερώτηση 8 - multiple choice, shuffle::[html]
Ποια από τις ακόλουθες προτάσεις περιγράφει καλύτερα τη χρήση του τελεστή is, όπως αυτός χρησιμοποιείται στη παρακάτω πρόταση if:
<pre>
if smallest is None :
     smallest = value
</pre>
{
= ταιριάζει και με τον τύπο και την τιμή.
# Ο τελεστής is είναι ισχυρότερος από τον τελεστή ισότητας (\=\=) καθώς επιμένει να ταιριάζουν ακριβώς οι δύο τιμές συμπεριλαμβανομένου του τύπου. Αυτό το απλό παράδειγμα δείχνει τη διαφορά:
>>> 1.0 \=\= 1
True
>>> 1.0 is 1
False
Ενώ το 1.0 είναι η ίδια τιμή με το 1, μετά τη μετατροπή του ακέραιου αριθμού 1 σε κινητή υποδιαστολή, ο τελεστής is δεν κάνει μετατροπή και έτσι οι δύο τιμές δεν ταιριάζουν. Ο τελεστής is χρησιμοποιείται καλύτερα σε μικρές σταθερές τιμές, όπως μικροί ακέραιοι, True, False και None. Ο τελεστής is δεν πρέπει να χρησιμοποιείται με μεγάλες αριθμητικές τιμές ή συμβολοσειρές - αυτές οι τιμές πρέπει να συγκρίνονται με τον τελεστή \=\=.
~ Αναζητά το 'None' στη μεταβλητή smallest εάν αυτή είναι string.
~ Είναι true εάν η μεταβλητή smallest έχει την τιμή -1.
~ Η πρόραση if είναι ένα συντακτικό λάθος.
}

::Ερώτηση 9 - multiple choice, shuffle::[html]
Ποια δεσμευμένη λέξη υποδεικνύει την αρχή ενός "αόριστου" βρόχου στην Python;
{
= while
~ indef
~ for
~ def
~ break
}

::Ερώτηση 10 - multiple choice, shuffle::[html]
Πόσες φορές θα εκτελεστεί το σώμα εντολών του ακόλουθου βρόχου;
<pre>
n = 0
while n > 0 :
    print('Lather')
    print('Rinse')
print('Dry off!')
</pre>
{
= 0
~ 5
~ 1
~ Αυτός είναι ένας ατέρμων βρόχος.
}